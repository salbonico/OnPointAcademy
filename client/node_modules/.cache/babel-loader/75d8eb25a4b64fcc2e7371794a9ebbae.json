{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Development/OnPointAcademy/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Development/OnPointAcademy/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Development/OnPointAcademy/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Development/OnPointAcademy/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Development/OnPointAcademy/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Development/OnPointAcademy/client/src/gauge.js\";\nimport { color } from 'd3-color';\nimport { interpolateRgb } from 'd3-interpolate';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport LiquidFillGauge from 'react-liquid-gauge';\n\nvar Gauge =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Gauge, _Component);\n\n  function Gauge() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Gauge);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Gauge)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: 50\n    };\n    _this.startColor = '#D23D2F';\n    _this.endColor = '#dc143c';\n    return _this;\n  }\n\n  _createClass(Gauge, [{\n    key: \"render\",\n    // crimson\n    value: function render() {\n      var _this2 = this;\n\n      var radius = 100;\n      var interpolate = interpolateRgb(this.startColor, this.endColor);\n      var fillColor = interpolate(this.state.value / 100);\n      var gradientStops = [{\n        key: '0%',\n        stopColor: color(fillColor).darker(0.5).toString(),\n        stopOpacity: 1,\n        offset: '0%'\n      }, {\n        key: '50%',\n        stopColor: fillColor,\n        stopOpacity: 0.75,\n        offset: '50%'\n      }, {\n        key: '100%',\n        stopColor: color(fillColor).brighter(0.5).toString(),\n        stopOpacity: 0.5,\n        offset: '100%'\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(LiquidFillGauge, {\n        style: {\n          margin: '0 auto'\n        },\n        width: radius * 2,\n        height: radius * 2,\n        value: 80,\n        percent: \"%\",\n        textSize: 1,\n        textOffsetX: 0,\n        textOffsetY: 0,\n        textRenderer: function textRenderer(props) {\n          var value = Math.round(props.value);\n          var radius = Math.min(props.height / 2, props.width / 2);\n          var textPixels = props.textSize * radius / 2;\n          var valueStyle = {\n            fontSize: textPixels\n          };\n          var percentStyle = {\n            fontSize: textPixels * 0.6\n          };\n          return React.createElement(\"tspan\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, React.createElement(\"tspan\", {\n            className: \"value\",\n            style: valueStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, value), React.createElement(\"tspan\", {\n            style: percentStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, props.percent));\n        },\n        riseAnimation: true,\n        waveAnimation: true,\n        waveFrequency: 2,\n        waveAmplitude: 1,\n        gradient: true,\n        gradientStops: gradientStops,\n        circleStyle: {\n          fill: fillColor\n        },\n        waveStyle: {\n          fill: fillColor\n        },\n        textStyle: {\n          fill: color('#444').toString(),\n          fontFamily: 'Arial'\n        },\n        waveTextStyle: {\n          fill: color('#fff').toString(),\n          fontFamily: 'Arial'\n        },\n        onClick: function onClick() {\n          _this2.setState({\n            value: Math.random() * 100\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          margin: '20px auto',\n          width: 120\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Gauge;\n}(Component);\n\nexport { Gauge as default };","map":{"version":3,"sources":["/Users/admin/Development/OnPointAcademy/client/src/gauge.js"],"names":["color","interpolateRgb","React","Component","ReactDOM","LiquidFillGauge","Gauge","state","value","startColor","endColor","radius","interpolate","fillColor","gradientStops","key","stopColor","darker","toString","stopOpacity","offset","brighter","margin","props","Math","round","min","height","width","textPixels","textSize","valueStyle","fontSize","percentStyle","percent","fill","fontFamily","setState","random"],"mappings":"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","sourcesContent":["import { color } from 'd3-color';\nimport { interpolateRgb } from 'd3-interpolate';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport LiquidFillGauge from 'react-liquid-gauge';\n\nexport default class Gauge extends Component {\n    state = {\n        value: 50\n    };\n    startColor = '#D23D2F'; // cornflowerblue\n    endColor = '#dc143c'; // crimson\n\n    render() {\n        const radius = 100;\n        const interpolate = interpolateRgb(this.startColor, this.endColor);\n        const fillColor = interpolate(this.state.value / 100);\n        const gradientStops = [\n            {\n                key: '0%',\n                stopColor: color(fillColor).darker(0.5).toString(),\n                stopOpacity: 1,\n                offset: '0%'\n            },\n            {\n                key: '50%',\n                stopColor: fillColor,\n                stopOpacity: 0.75,\n                offset: '50%'\n            },\n            {\n                key: '100%',\n                stopColor: color(fillColor).brighter(0.5).toString(),\n                stopOpacity: 0.5,\n                offset: '100%'\n            }\n        ];\n\n        return (\n            <div>\n                <LiquidFillGauge\n                    style={{ margin: '0 auto' }}\n                    width={radius * 2}\n                    height={radius * 2}\n                    value={80}\n                    percent=\"%\"\n                    textSize={1}\n                    textOffsetX={0}\n                    textOffsetY={0}\n                    textRenderer={(props) => {\n                        const value = Math.round(props.value);\n                        const radius = Math.min(props.height / 2, props.width / 2);\n                        const textPixels = (props.textSize * radius / 2);\n                        const valueStyle = {\n                            fontSize: textPixels\n                        };\n                        const percentStyle = {\n                            fontSize: textPixels * 0.6\n                        };\n\n                        return (\n                            <tspan>\n                                <tspan className=\"value\" style={valueStyle}>{value}</tspan>\n                                <tspan style={percentStyle}>{props.percent}</tspan>\n                            </tspan>\n                        );\n                    }}\n                    riseAnimation\n                    waveAnimation\n                    waveFrequency={2}\n                    waveAmplitude={1}\n                    gradient\n                    gradientStops={gradientStops}\n                    circleStyle={{\n                        fill: fillColor\n                    }}\n                    waveStyle={{\n                        fill: fillColor\n                    }}\n                    textStyle={{\n                        fill: color('#444').toString(),\n                        fontFamily: 'Arial'\n                    }}\n                    waveTextStyle={{\n                        fill: color('#fff').toString(),\n                        fontFamily: 'Arial'\n                    }}\n                    onClick={() => {\n                        this.setState({ value: Math.random() * 100 });\n                    }}\n                />\n                <div\n                    style={{\n                        margin: '20px auto',\n                        width: 120\n                    }}\n                >\n\n                </div>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}